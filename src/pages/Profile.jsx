import { useParams } from 'react-router-dom'
import { MapPin, Mail, Calendar, Award, ExternalLink } from 'lucide-react'
import Header from '../components/Header'
import Card from '../components/ui/Card'
import Avatar from '../components/ui/Avatar'
import Badge from '../components/ui/Badge'
import Button from '../components/ui/Button'
import ProgressBar from '../components/ProgressBar'

export default function Profile() {
    const { id } = useParams()

    // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const user = {
        id,
        displayName: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        role: 'user',
        email: 'ivan@example.com',
        bio: 'Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —É–≤–ª–µ–∫–∞—é—Å—å React –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≤–µ–±-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –ò—â—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏.',
        location: '–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è',
        joinDate: '2024-01-15',
        level: 7,
        points: 2450,
        pointsToNextLevel: 500
    }

    const skills = [
        'JavaScript',
        'React',
        'TypeScript',
        'Node.js',
        'CSS/Tailwind',
        'Git',
        'REST API',
        'PostgreSQL'
    ]

    const projects = [
        {
            id: '1',
            title: 'E-commerce –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
            role: 'Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
            status: 'completed',
            description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –æ–ø–ª–∞—Ç–æ–π',
            link: 'https://github.com/user/project'
        },
        {
            id: '2',
            title: '–•–∞–∫–∞—Ç–æ–Ω "–¶–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ—Ä—ã–≤"',
            role: 'Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
            status: 'winner',
            description: '1 –º–µ—Å—Ç–æ –≤ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ',
            link: null
        },
        {
            id: '3',
            title: '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏',
            role: 'Team Lead',
            status: 'in_progress',
            description: '–ö–æ–º–∞–Ω–¥–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞',
            link: null
        }
    ]

    const badges = [
        { id: '1', name: '–ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç', icon: 'üìù', color: 'primary' },
        { id: '2', name: '–ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫', icon: 'üî•', color: 'danger' },
        { id: '3', name: '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å —Ö–∞–∫–∞—Ç–æ–Ω–∞', icon: 'üèÜ', color: 'warning' },
        { id: '4', name: '–ù–∞—Å—Ç–∞–≤–Ω–∏–∫', icon: 'üë®‚Äçüè´', color: 'success' },
        { id: '5', name: '100 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤', icon: 'üí¨', color: 'purple' }
    ]

    const communities = [
        { id: '1', name: 'IT & Tech' },
        { id: '2', name: '–î–∏–∑–∞–π–Ω' },
        { id: '3', name: '–°—Ç–∞—Ä—Ç–∞–ø—ã' }
    ]

    const statusLabels = {
        completed: { label: '–ó–∞–≤–µ—Ä—à—ë–Ω', variant: 'success' },
        in_progress: { label: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ', variant: 'warning' },
        winner: { label: '–ü–æ–±–µ–¥–∞', variant: 'danger' }
    }

    const roleLabels = {
        user: '–£—á–∞—Å—Ç–Ω–∏–∫',
        mentor: '–ù–∞—Å—Ç–∞–≤–Ω–∏–∫',
        employer: '–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å'
    }

    return (
        <div className="min-h-screen bg-gray-50">
            <Header />

            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div className="lg:col-span-1 space-y-6">
                        <Card>
                            <div className="text-center">
                                <Avatar
                                    src={user.photoURL}
                                    alt={user.displayName}
                                    size="xl"
                                    className="mx-auto mb-4"
                                />
                                <h1 className="text-2xl font-bold text-gray-900 mb-1">
                                    {user.displayName}
                                </h1>
                                <Badge variant="primary" className="mb-4">
                                    {roleLabels[user.role]}
                                </Badge>

                                <div className="space-y-2 text-sm text-gray-600 mb-6">
                                    {user.location && (
                                        <div className="flex items-center justify-center">
                                            <MapPin className="w-4 h-4 mr-2" />
                                            {user.location}
                                        </div>
                                    )}
                                    <div className="flex items-center justify-center">
                                        <Mail className="w-4 h-4 mr-2" />
                                        {user.email}
                                    </div>
                                    <div className="flex items-center justify-center">
                                        <Calendar className="w-4 h-4 mr-2" />
                                        –° {new Date(user.joinDate).toLocaleDateString('ru-RU')}
                                    </div>
                                </div>

                                <Button className="w-full">
                                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                                </Button>
                            </div>
                        </Card>

                        <Card>
                            <h3 className="font-semibold text-gray-900 mb-4 flex items-center">
                                <Award className="w-5 h-5 mr-2 text-indigo-600" />
                                –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                            </h3>
                            <div className="text-center mb-4">
                                <div className="text-4xl font-bold text-indigo-600 mb-1">
                                    {user.level}
                                </div>
                                <p className="text-sm text-gray-600">
                                    {user.points} / {user.points + user.pointsToNextLevel} –±–∞–ª–ª–æ–≤
                                </p>
                            </div>
                            <ProgressBar
                                value={user.points}
                                max={user.points + user.pointsToNextLevel}
                            />
                            <p className="text-xs text-gray-500 mt-2 text-center">
                                –î–æ {user.level + 1} —É—Ä–æ–≤–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å {user.pointsToNextLevel} –±–∞–ª–ª–æ–≤
                            </p>
                        </Card>

                        <Card>
                            <h3 className="font-semibold text-gray-900 mb-4">
                                –°–æ–æ–±—â–µ—Å—Ç–≤–∞
                            </h3>
                            <div className="space-y-2">
                                {communities.map(community => (
                                    <div
                                        key={community.id}
                                        className="flex items-center space-x-2 text-gray-700 hover:text-indigo-600 cursor-pointer"
                                    >
                                        <div className="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-lg flex items-center justify-center text-white text-xs font-bold">
                                            {community.name.charAt(0)}
                                        </div>
                                        <span className="text-sm">{community.name}</span>
                                    </div>
                                ))}
                            </div>
                        </Card>
                    </div>

                    <div className="lg:col-span-2 space-y-6">
                        <Card>
                            <h2 className="text-2xl font-bold text-gray-900 mb-4">
                                –û —Å–µ–±–µ
                            </h2>
                            <p className="text-gray-600">
                                {user.bio}
                            </p>
                        </Card>

                        <Card>
                            <h2 className="text-2xl font-bold text-gray-900 mb-4">
                                –ù–∞–≤—ã–∫–∏
                            </h2>
                            <div className="flex flex-wrap gap-2">
                                {skills.map((skill, i) => (
                                    <Badge key={i} variant="primary" className="text-base px-4 py-2">
                                        {skill}
                                    </Badge>
                                ))}
                            </div>
                        </Card>

                        <Card>
                            <h2 className="text-2xl font-bold text-gray-900 mb-4">
                                –ü—Ä–æ–µ–∫—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                            </h2>
                            <div className="space-y-4">
                                {projects.map(project => (
                                    <div
                                        key={project.id}
                                        className="border-l-4 border-indigo-600 pl-4 py-2"
                                    >
                                        <div className="flex items-start justify-between mb-2">
                                            <div>
                                                <h3 className="font-semibold text-gray-900 flex items-center">
                                                    {project.title}
                                                    {project.link && (
                                                        <a
                                                            href={project.link}
                                                            target="_blank"
                                                            rel="noopener noreferrer"
                                                            className="ml-2 text-indigo-600 hover:text-indigo-700"
                                                        >
                                                            <ExternalLink className="w-4 h-4" />
                                                        </a>
                                                    )}
                                                </h3>
                                                <p className="text-sm text-gray-600">{project.role}</p>
                                            </div>
                                            <Badge variant={statusLabels[project.status].variant}>
                                                {statusLabels[project.status].label}
                                            </Badge>
                                        </div>
                                        <p className="text-sm text-gray-600">
                                            {project.description}
                                        </p>
                                    </div>
                                ))}
                            </div>
                        </Card>

                        <Card>
                            <h2 className="text-2xl font-bold text-gray-900 mb-4">
                                –ë–µ–π–¥–∂–∏
                            </h2>
                            <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
                                {badges.map(badge => (
                                    <div
                                        key={badge.id}
                                        className="flex flex-col items-center p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer"
                                    >
                                        <span className="text-4xl mb-2">{badge.icon}</span>
                                        <span className="text-xs text-center font-medium text-gray-700">
                                            {badge.name}
                                        </span>
                                    </div>
                                ))}
                            </div>
                        </Card>
                    </div>
                </div>
            </div>
        </div>
    )
}
